#!/usr/bin/env sh

# if [ `uname` ]
# echo sup
# if uname | grep -qv 'Linux'; then

#     if uname | grep -qv 'Linux\|Darwin'; then
# if ! command -v wslview &> /dev/null

if ! command -v brew &> /dev/null
then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

#----------------------------------------------------------------------------

brew_list=`brew list`

PACKAGES_BASE="kotlin espeak flac wget bpytop yarn docker-machine openjdk
minikube pdftoipe kubectx bat pandoc texlive htop kotlin-language-server terraform-ls
terraform act findutils gnupg neovim fzf ripgrep tmux xclip cmake go node"
PACKAGES=""

for p in $PACKAGES_BASE; do
    if ! echo "$brew_list" | grep -q "$p" ; then
        PACKAGES="$PACKAGES $p"
    fi
	# PACKAGES=${PACKAGES//$p/}
done;
echo stuff to install $PACKAGES
if [ -z "$PACKAGES " ]; then
    brew install $PACKAGES
fi

#----------------------------------------------------------------------------
if ! command -v yabai &> /dev/null; then
    echo Installing yabai
    # brew install koekeishiya/formulae/yabai --HEAD
fi
if ! command -v skhd &> /dev/null; then
    echo Installing skhd
    # brew install koekeishiya/formulae/skhd
fi
if ! command -v cargo &> /dev/null; then
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    rustup install nightly
    rustup default nightly
fi
#----------------------------------------------------------------------------
if ! command -v gopls &> /dev/null; then
    go install golang.org/x/tools/gopls@latest
fi
if ! command -v bash-language-server &> /dev/null; then
    npm i -g bash-language-server
fi
if ! command -v pyright &> /dev/null; then
    pip3 install pyright
fi
if ! command -v yaml-language-server &> /dev/null; then
    yarn global add yaml-language-server
fi
if ! command -v vscode-html-language-server &> /dev/null; then
npm i -g vscode-langservers-extracted
fi
if ! command -v graphql-lsp &> /dev/null; then
    npm install -g graphql-language-service-cli
fi
if ! command -v typescript-language-server &> /dev/null; then
    npm install -g typescript typescript-language-server
fi
if ! command -v docker-langserver &> /dev/null; then
    npm install -g dockerfile-language-server-nodejs
fi
#----------------------------------------------------------------------------
if ! echo "$brew_list" | grep -q "font-fontawesome"; then
    brew install --cask font-fontawesome
fi
if ! grep -q "/go/bin" $HOME/.zshrc ; then
    echo 'export PATH="\$PATH:\$HOME/go/bin"' >> $HOME/.zshrc
fi
# brew install --cask font-hack-nerd-font
# brew install node@16
# brew link --overwrite node@16
